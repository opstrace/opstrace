- table:
    schema: public
    name: credential
  object_relationships:
  - name: tenantByTenant
    using:
      foreign_key_constraint_on: tenant
  array_relationships:
  - name: exporters
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: exporter
        column_mapping:
          tenant: tenant
          name: credential
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - tenant
      - name
      - type
      - value
      - created_at
      - updated_at
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - created_at
      - name
      - tenant
      - type
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user_admin
    permission:
      columns:
      - value
      - name
      - tenant
      - type
      - created_at
      - updated_at
      filter: {}
      check: {}
  delete_permissions:
  - role: user_admin
    permission:
      filter: {}
- table:
    schema: public
    name: exporter
  object_relationships:
  - name: credentialByCredentialTenant
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: credential
        column_mapping:
          credential: name
          tenant: tenant
  - name: tenantByTenant
    using:
      foreign_key_constraint_on: tenant
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - tenant
      - name
      - type
      - credential
      - config
      - created_at
      - updated_at
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - config
      - credential
      - name
      - tenant
      - type
      - created_at
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user_admin
    permission:
      columns:
      - config
      - credential
      - name
      - tenant
      - type
      - created_at
      - updated_at
      filter: {}
      check: null
  delete_permissions:
  - role: user_admin
    permission:
      filter: {}
- table:
    schema: public
    name: integration
  object_relationships:
  - name: tenant
    using:
      foreign_key_constraint_on: tenant_id
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - data
      - grafana_metadata
      - key
      - kind
      - name
      - tenant_id
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - created_at
      - data
      - grafana_metadata
      - id
      - key
      - kind
      - name
      - tenant_id
      - updated_at
      filter: {}
  update_permissions:
  - role: user_admin
    permission:
      columns:
      - data
      - grafana_metadata
      - kind
      - name
      filter: {}
      check: null
  delete_permissions:
  - role: user_admin
    permission:
      filter: {}
- table:
    schema: public
    name: tenant
  array_relationships:
  - name: credentials
    using:
      foreign_key_constraint_on:
        column: tenant
        table:
          schema: public
          name: credential
  - name: exporters
    using:
      foreign_key_constraint_on:
        column: tenant
        table:
          schema: public
          name: exporter
  - name: integrations
    using:
      foreign_key_constraint_on:
        column: tenant_id
        table:
          schema: public
          name: integration
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - key
      - name
      - type
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - created_at
      - id
      - key
      - name
      - type
      - updated_at
      filter: {}
      allow_aggregations: true
  delete_permissions:
  - role: user_admin
    permission:
      filter:
        type:
          _ne: SYSTEM
- table:
    schema: public
    name: user
  object_relationships:
  - name: preference
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: user_preference
        column_mapping:
          id: user_id
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - active
      - avatar
      - email
      - role
      - username
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - avatar
      - created_at
      - email
      - role
      - username
      filter:
        id:
          _eq: X-Hasura-User-Id
  - role: user_admin
    permission:
      columns:
      - id
      - active
      - avatar
      - created_at
      - email
      - role
      - session_last_updated
      - username
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - avatar
      - username
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: null
  - role: user_admin
    permission:
      columns:
      - active
      - username
      filter: {}
      check: null
- table:
    schema: public
    name: user_preference
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - dark_mode
      - user_id
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - dark_mode
      filter:
        user_id:
          _eq: X-Hasura-User-Id
  - role: user_admin
    permission:
      columns:
      - dark_mode
      - user_id
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - dark_mode
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check: null
  - role: user_admin
    permission:
      columns:
      - dark_mode
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user_admin
    permission:
      filter: {}
