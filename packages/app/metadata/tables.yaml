- table:
    schema: public
    name: branch
  array_relationships:
  - name: files
    using:
      foreign_key_constraint_on:
        column: branch_name
        table:
          schema: public
          name: file
  - name: modules
    using:
      foreign_key_constraint_on:
        column: branch_name
        table:
          schema: public
          name: module
  - name: versions
    using:
      foreign_key_constraint_on:
        column: branch_name
        table:
          schema: public
          name: module_version
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - has_merged
      - protected
      - name
      - created_at
      backend_only: false
  - role: user_admin
    permission:
      check: {}
      columns:
      - has_merged
      - protected
      - name
      - created_at
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - name
      - created_at
      - protected
      - has_merged
      filter: {}
  - role: user_admin
    permission:
      columns:
      - has_merged
      - protected
      - name
      - created_at
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - name
      - protected
      filter: {}
      check: null
  - role: user_admin
    permission:
      columns:
      - name
      - protected
      filter: {}
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        protected:
          _ne: true
  - role: user_admin
    permission:
      filter:
        protected:
          _ne: true
- table:
    schema: public
    name: credential
  object_relationships:
  - name: tenantByTenant
    using:
      foreign_key_constraint_on: tenant
  array_relationships:
  - name: exporters
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: exporter
        column_mapping:
          tenant: tenant
          name: credential
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - tenant
      - name
      - type
      - value
      - created_at
      - updated_at
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - created_at
      - name
      - tenant
      - type
      - updated_at
      filter: {}
  update_permissions:
  - role: user_admin
    permission:
      columns:
      - value
      - name
      - tenant
      - type
      - created_at
      - updated_at
      filter: {}
      check: {}
  delete_permissions:
  - role: user_admin
    permission:
      filter: {}
- table:
    schema: public
    name: exporter
  object_relationships:
  - name: credentialByCredentialTenant
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: credential
        column_mapping:
          credential: name
          tenant: tenant
  - name: tenantByTenant
    using:
      foreign_key_constraint_on: tenant
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - tenant
      - name
      - type
      - credential
      - config
      - created_at
      - updated_at
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - config
      - credential
      - name
      - tenant
      - type
      - created_at
      - updated_at
      filter: {}
  update_permissions:
  - role: user_admin
    permission:
      columns:
      - config
      - credential
      - name
      - tenant
      - type
      - created_at
      - updated_at
      filter: {}
      check: null
  delete_permissions:
  - role: user_admin
    permission:
      filter: {}
- table:
    schema: public
    name: file
  object_relationships:
  - name: branch
    using:
      foreign_key_constraint_on: branch_name
  - name: module
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: module
        column_mapping:
          module_scope: scope
          branch_name: branch_name
          module_name: name
  - name: version
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: module_version
        column_mapping:
          module_scope: module_scope
          module_version: version
          branch_name: branch_name
          module_name: module_name
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - base_file_id
      - branch_name
      - contents
      - ext
      - id
      - mark_deleted
      - module_name
      - module_scope
      - module_version
      - path
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - base_file_id
      - branch_name
      - contents
      - created_at
      - ext
      - id
      - mark_deleted
      - module_name
      - module_scope
      - module_version
      - path
      filter: {}
- table:
    schema: public
    name: module
  object_relationships:
  - name: branch
    using:
      foreign_key_constraint_on: branch_name
  array_relationships:
  - name: files
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: file
        column_mapping:
          branch_name: branch_name
          name: module_name
          scope: module_scope
  - name: versions
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: module_version
        column_mapping:
          branch_name: branch_name
          name: module_name
          scope: module_scope
  insert_permissions:
  - role: user_admin
    permission:
      check:
        branch:
          protected:
            _eq: false
      columns:
      - branch_name
      - name
      - scope
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - branch_name
      - name
      - scope
      - created_at
      filter: {}
  - role: user_admin
    permission:
      columns:
      - branch_name
      - created_at
      - name
      - scope
      filter: {}
- table:
    schema: public
    name: module_version
  object_relationships:
  - name: branch
    using:
      foreign_key_constraint_on: branch_name
  - name: module
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: module
        column_mapping:
          module_scope: scope
          branch_name: branch_name
          module_name: name
  array_relationships:
  - name: files
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: file
        column_mapping:
          module_scope: module_scope
          branch_name: branch_name
          version: module_version
          module_name: module_name
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - module_name
      - created_at
      - version
      - branch_name
      - module_scope
      backend_only: false
  - role: user_admin
    permission:
      check: {}
      columns:
      - branch_name
      - created_at
      - module_name
      - module_scope
      - version
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - branch_name
      - module_name
      - module_scope
      - version
      - created_at
      filter: {}
  - role: user_admin
    permission:
      columns:
      - branch_name
      - created_at
      - module_name
      - module_scope
      - version
      filter: {}
- table:
    schema: public
    name: tenant
  array_relationships:
  - name: credentials
    using:
      foreign_key_constraint_on:
        column: tenant
        table:
          schema: public
          name: credential
  - name: exporters
    using:
      foreign_key_constraint_on:
        column: tenant
        table:
          schema: public
          name: exporter
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - name
      - type
      backend_only: false
  select_permissions:
  - role: user_admin
    permission:
      columns:
      - created_at
      - name
      - type
      filter: {}
  delete_permissions:
  - role: user_admin
    permission:
      filter:
        type:
          _ne: SYSTEM
- table:
    schema: public
    name: user
  object_relationships:
  - name: preference
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: user_preference
        column_mapping:
          email: email
  array_relationships:
  - name: user_preferences
    using:
      foreign_key_constraint_on:
        column: email
        table:
          schema: public
          name: user_preference
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - avatar
      - email
      - username
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - avatar
      - created_at
      - email
      - opaque_id
      - role
      - username
      filter:
        email:
          _eq: X-Hasura-User-Id
  - role: user_admin
    permission:
      columns:
      - active
      - avatar
      - created_at
      - email
      - opaque_id
      - role
      - session_last_updated
      - username
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - avatar
      - username
      filter:
        email:
          _eq: X-Hasura-User-Id
      check: null
  - role: user_admin
    permission:
      columns:
      - active
      - username
      filter: {}
      check: null
- table:
    schema: public
    name: user_preference
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: email
  insert_permissions:
  - role: user_admin
    permission:
      check: {}
      columns:
      - dark_mode
      - email
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - email
      - dark_mode
      filter:
        email:
          _eq: X-Hasura-User-Id
  - role: user_admin
    permission:
      columns:
      - dark_mode
      - email
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - dark_mode
      filter:
        email:
          _eq: X-Hasura-User-Id
      check: null
  - role: user_admin
    permission:
      columns:
      - dark_mode
      filter:
        email:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user_admin
    permission:
      filter: {}
