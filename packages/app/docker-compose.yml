###
# Hasura dev environment. See README.md for more information.
###
version: "3.6"
services:
  # PostgreSQL service, accessed via pgadmin and hasura/graphql
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - /var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  # pgadmin dashboard for inspecting/interacting with postgres directly
  # See README for instructions on access
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
  # Hasura server, serving a GraphQL proxy in front of postgres
  # Launch Hasura console using 'yarn console'
  graphql:
    image: hasura/graphql-engine:v1.3.3.cli-migrations-v2
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## disable the console served by server, console should be run separately
      ## see instructions: https://hasura.io/docs/1.0/graphql/core/migrations/migrations-setup.html
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecret
      ## https://hasura.io/docs/1.0/graphql/core/guides/telemetry.html
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
  # S3 service for storing modules
  s3:
    image: minio/minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: none
  redis:
    image: bitnami/redis:6.0.9
    environment:
      - REDIS_PASSWORD=myredispassword
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - 6379:6379