{
  "version": 3,
  "sources": ["../src/client/components/Button/Button.tsx", "../node_modules/@material-ui/core/esm/Button/Button.js", "../node_modules/@material-ui/core/esm/styles/colorManipulator.js"],
  "sourcesContent": ["/**\n * Copyright 2020 Opstrace, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport MuiButton, {\n  ButtonProps as MuiButtonProps\n} from \"@material-ui/core/Button\";\n\nimport { ITheme } from \"client/themes\";\n\ntype ButtonState =\n  | \"success\"\n  | \"error\"\n  | \"warning\"\n  | \"primary\"\n  | \"secondary\"\n  | \"info\";\n\nexport type ButtonProps = MuiButtonProps & {\n  state?: ButtonState;\n};\n\nconst BaseButton = ({ children, state, ...rest }: ButtonProps) => {\n  return (\n    <MuiButton size={rest.size || \"small\"} {...rest}>\n      {children}\n    </MuiButton>\n  );\n};\n\nconst getColorForState = (theme: ITheme, state?: ButtonState) => {\n  switch (state) {\n    case \"primary\":\n      return theme.palette.primary;\n    case \"secondary\":\n      return theme.palette.secondary;\n    case \"error\":\n      return theme.palette.error;\n    case \"warning\":\n      return theme.palette.warning;\n    case \"success\":\n      return theme.palette.success;\n    default:\n      return theme.palette.info;\n  }\n};\n\n\nconst Button = styled(BaseButton)`\n  box-shadow: none;\n  text-decoration: none;\n  &:hover {\n    box-shadow: none;\n  }\n  color: ${props => getColorForState(props.theme, props.state).contrastText};\n\n  ${props =>\n    props.variant === \"contained\" &&\n    css`\n      background-color: ${getColorForState(props.theme, props.state).main};\n      &:hover {\n        background-color: ${getColorForState(props.theme, props.state).light};\n      }\n    `}\n  }}\n  ${props =>\n    (props.variant === \"text\" || props.variant === \"outlined\") &&\n    css`\n      color: ${getColorForState(props.theme, props.state).main};\n      &:hover {\n        color: ${getColorForState(props.theme, props.state).light};\n      }\n    `}\n  }}\n  ${props =>\n    props.variant === \"outlined\" &&\n    css`\n      border-color: ${getColorForState(props.theme, props.state).main};\n      &:hover {\n        border-color: ${getColorForState(props.theme, props.state).light};\n      }\n    `}\n  }}\n`;\n\nexport default Button;\n", "import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * \u26A0\uFE0F Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);", "import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable no-use-before-define */\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(\"Material-UI: The value provided \".concat(value, \" is out of range [\").concat(min, \", \").concat(max, \"].\"));\n    }\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n *\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nexport function hexToRgb(color) {\n  color = color.substr(1);\n  var re = new RegExp(\".{1,\".concat(color.length >= 6 ? 2 : 1, \"}\"), 'g');\n  var colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (n) {\n      return n + n;\n    });\n  }\n\n  return colors ? \"rgb\".concat(colors.length === 4 ? 'a' : '', \"(\").concat(colors.map(function (n, index) {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', '), \")\") : '';\n}\n\nfunction intToHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n *\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\n\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n\n  var _decomposeColor = decomposeColor(color),\n      values = _decomposeColor.values;\n\n  return \"#\".concat(values.map(function (n) {\n    return intToHex(n);\n  }).join(''));\n}\n/**\n * Converts a color from hsl format to rgb format.\n *\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\n\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  var _color = color,\n      values = _color.values;\n  var h = values[0];\n  var s = values[1] / 100;\n  var l = values[2] / 100;\n  var a = s * Math.min(l, 1 - l);\n\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n\n  var type = 'rgb';\n  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({\n    type: type,\n    values: rgb\n  });\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported `\".concat(color, \"` color.\\nWe support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().\") : _formatMuiErrorMessage(3, color));\n  }\n\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n  return {\n    type: type,\n    values: values\n  };\n}\n/**\n * Converts a color object with type and values to a string.\n *\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\nexport function recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = \"\".concat(values[1], \"%\");\n    values[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(type, \"(\").concat(values.join(', '), \")\");\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\nexport function getContrastRatio(foreground, background) {\n  var lumA = getLuminance(foreground);\n  var lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(function (val) {\n    val /= 255; // normalized\n\n    return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);\n  }); // Truncate at 3 digits\n\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function emphasize(color) {\n  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0 -1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function fade(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n\n  color.values[3] = value;\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}"],
  "mappings": "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",
  "names": []
}
